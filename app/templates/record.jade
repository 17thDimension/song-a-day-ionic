
html
  body
    //
        This template loads for the 'tab.song-detail' state (app.js)
        'song' is a $scope variable created in the SongCtrl controller (controllers.js)
        The SongCtrl pulls data from the Songs service (service.js)
        The Songs service returns an array of song data
    ion-view(view-title='Record')
      ion-content(has-header='true', padding='true')  
        div(ng-if='!loggedIn')
          br
          button.button.button-light(ng-click='login();loading=true') log in
          p to share your vibration
        div(ng-if='transmitted')
          h1 Todays Transmission:
          ion-item(ng-include="'templates/song-item.html'")
        .record(ng-if='!transmitted&&loggedIn')  
          .buttons(ng-hide='native')
            button.button.button-icon.ion-stop(ng-disabled='!recording',ng-click='stopRecording()')        
            br
            button.button.button-icon.ion-record(ng-class='recording?"recording":"solid"',ng-click='startRecording()')
          h2(ng-bind='message')
          .recording(ng-show='wav_file_uri && !recording')
            .meta-input
              label.item.item-input.text-center
                span.input-label Title
                input(ng-model='transmission.title',type='text',placeholder='song title')
              label.item.item-input.text-center
                span.input-label Info
                input(ng-model='transmission.info',type='text',placeholder='song information')
              p {{media}}
            audio(autoplay,ng-src='{{ wav_file_uri | trust }}',controls)
            .transmit(ng-show='readyToTransmit && !transmitting')
              br
              button.button.button-light.ion-send(ng-click='transmit()') transmit
              br
      
        button.button.button-assertive.revoke(ng-show='transmitted',ng-click='revoke()')
          | Revoke
